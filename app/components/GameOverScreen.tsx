import React from "react";
import {
  View,
  Text,
  StyleSheet,
  Modal,
  TouchableOpacity,
  Share,
} from "react-native";
import { useRouter } from "expo-router";

type Props = {
  visible: boolean;
  waves: number;
  timeSpent: number; // ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
  score: number;
  onPlayAgain: () => void;
  onGoHome: () => void; // üëà ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home
};

export default function GameOverScreen({
  visible,
  waves,
  timeSpent,
  score,
  onPlayAgain,
  onGoHome,
}: Props) {
  const handleShare = async () => {
    try {
      await Share.share({
        message: `‡∏â‡∏±‡∏ô‡∏ó‡∏≥‡πÑ‡∏î‡πâ ${score} ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô ‡∏ú‡πà‡∏≤‡∏ô ${waves} wave ‡πÉ‡∏ô ${timeSpent}s! üí™`,
      });
    } catch {}
  };

  const router = useRouter();

  const handleGoHome = () => {
    router.replace("/(tabs)");
  };

  return (
    <Modal animationType="fade" visible={visible} transparent>
      <View style={styles.overlay}>
        <View style={styles.card}>
          <Text style={styles.title}>Game Over</Text>

          <View style={styles.row}>
            <Text style={styles.label}>Wave ‡∏ó‡∏µ‡πà‡∏ú‡πà‡∏≤‡∏ô</Text>
            <Text style={styles.value}>{waves}</Text>
          </View>
          <View style={styles.row}>
            <Text style={styles.label}>‡πÄ‡∏ß‡∏•‡∏≤</Text>
            <Text style={styles.value}>{timeSpent}s</Text>
          </View>
          <View style={[styles.row, styles.rowScore]}>
            <Text style={styles.labelScore}>‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
            <Text style={styles.valueScore}>{score}</Text>
          </View>

          <View style={styles.actions}>
            {/* ‚ñ∂Ô∏è ‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏Å‡∏°‡πÉ‡∏´‡∏°‡πà */}
            <TouchableOpacity
              style={[styles.btn, styles.btnPrimary]}
              onPress={onPlayAgain}
            >
              <Text style={styles.btnTextPrimary}>‡πÄ‡∏•‡πà‡∏ô‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á</Text>
            </TouchableOpacity>

            {/* üì§ ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡πÑ‡∏õ‡∏ó‡∏µ‡πà social / app ‡∏≠‡∏∑‡πà‡∏ô ‡πÜ */}
            <TouchableOpacity
              style={[styles.btn, styles.btnSecondary]}
              onPress={handleShare}
            >
              <Text style={styles.btnText}>‡πÅ‡∏ä‡∏£‡πå‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô</Text>
            </TouchableOpacity>

            {/* üè† ‡∏õ‡∏∏‡πà‡∏°‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Home */}
            <TouchableOpacity
              style={[styles.btn, styles.btnHome]}
              onPress={handleGoHome}
            >
              <Text style={styles.btnTextHome}>‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤ Home</Text>
            </TouchableOpacity>
          </View>
        </View>
      </View>
    </Modal>
  );
}

const styles = StyleSheet.create({
  overlay: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.95)", // ‡∏Å‡∏•‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡πÄ‡∏´‡πá‡∏ô‡πÅ‡∏ó‡πá‡∏ö/‡∏Ç‡∏≠‡∏ö
    alignItems: "center",
    justifyContent: "center",
    padding: 20,
  },
  card: {
    width: "100%",
    maxWidth: 420,
    backgroundColor: "#0B0B0B",
    borderRadius: 16,
    padding: 20,
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.08)",
  },
  title: {
    color: "#FF5A5F",
    fontSize: 32,
    fontWeight: "700",
    textAlign: "center",
    marginBottom: 14,
  },
  row: {
    flexDirection: "row",
    justifyContent: "space-between",
    marginVertical: 6,
  },
  rowScore: {
    marginTop: 10,
    paddingVertical: 12,
    borderTopWidth: 1,
    borderBottomWidth: 1,
    borderColor: "rgba(255,255,255,0.08)",
  },
  label: { color: "#BFBFBF", fontSize: 16 },
  value: { color: "#FFFFFF", fontSize: 16, fontWeight: "600" },
  labelScore: { color: "#FFD600", fontSize: 18, fontWeight: "700" },
  valueScore: { color: "#FFD600", fontSize: 24, fontWeight: "800" },
  actions: {
    marginTop: 16,
    gap: 10,
  },
  btn: {
    paddingVertical: 12,
    borderRadius: 12,
    alignItems: "center",
    justifyContent: "center",
  },
  btnPrimary: { backgroundColor: "#22c55e" },
  btnSecondary: { backgroundColor: "#1F2937" },
  btnHome: {
    backgroundColor: "transparent",
    borderWidth: 1,
    borderColor: "rgba(255,255,255,0.25)",
  },
  btnTextPrimary: { color: "#fff", fontWeight: "700", fontSize: 16 },
  btnText: { color: "#fff", fontWeight: "600", fontSize: 16 },
  btnTextHome: { color: "#E5E7EB", fontWeight: "700", fontSize: 16 },
});
